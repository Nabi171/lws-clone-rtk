{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\m06\\\\src\\\\components\\\\grid\\\\VIdeoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport VideoGridItem from './VideoGridItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchVideos } from '../../features/videos/videosSlice';\nimport Loading from '../ui/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIdeoGrid = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    videos,\n    isLoading,\n    isError,\n    error\n  } = useSelector(state => state.videos);\n  const {\n    tags,\n    search\n  } = useSelector(state => state.filter);\n  useEffect(() => {\n    dispatch(fetchVideos());\n  }, [dispatch]);\n\n  //decide what to render\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 19\n    }, this);\n  }\n  if (!isLoading && isError) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-12\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this);\n  }\n  if (!isLoading && !isLoading && (videos === null || videos === void 0 ? void 0 : videos.length) === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-span-12\",\n      children: \"No videos found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this);\n  }\n  if (!isLoading && !isLoading && (videos === null || videos === void 0 ? void 0 : videos.length) > 0) {\n    content = videos.map(video => /*#__PURE__*/_jsxDEV(VideoGridItem, {\n      video: video\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 42\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"pt-12\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"pt-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-12 gap-4 max-w-7xl mx-auto px-5 lg:px-0 min-h-[300px]\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(VIdeoGrid, \"M78+fiXtTLL4LjIRuCuX+cFS+TM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = VIdeoGrid;\nexport default VIdeoGrid;\nvar _c;\n$RefreshReg$(_c, \"VIdeoGrid\");","map":{"version":3,"names":["React","useEffect","VideoGridItem","useDispatch","useSelector","fetchVideos","Loading","jsxDEV","_jsxDEV","VIdeoGrid","_s","dispatch","videos","isLoading","isError","error","state","tags","search","filter","content","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","map","video","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/m06/src/components/grid/VIdeoGrid.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport VideoGridItem from './VideoGridItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchVideos } from '../../features/videos/videosSlice';\r\nimport Loading from '../ui/Loading';\r\n\r\nconst VIdeoGrid = () => {\r\n    const dispatch = useDispatch();\r\n    const { videos, isLoading, isError, error } = useSelector((state) => state.videos)\r\n    const { tags, search } = useSelector((state) => state.filter)\r\n    useEffect(() => {\r\n        dispatch(fetchVideos())\r\n    }, [dispatch]);\r\n\r\n    //decide what to render\r\n    let content;\r\n    if (isLoading) {\r\n        content = <Loading />\r\n    }\r\n    if (!isLoading && isError) {\r\n        content = <div className=\"col-span-12\">{error}</div>\r\n    }\r\n    if (!isLoading && !isLoading && videos ?.length === 0) {\r\n        content = <div className=\"col-span-12\">No videos found!</div>\r\n    }\r\n    if (!isLoading && !isLoading && videos ?.length > 0) {\r\n        content = videos.map((video) => (<VideoGridItem key={video.id} video={video} />))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"pt-12\">\r\n                <section className=\"pt-12\">\r\n                    <div\r\n                        className=\"grid grid-cols-12 gap-4 max-w-7xl mx-auto px-5 lg:px-0 min-h-[300px]\"\r\n                    >\r\n                        {/* <!-- single video --> */}\r\n                        {content}\r\n\r\n                        {/* <div className=\"col-span-12\">some error happened</div>  */}\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VIdeoGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACJ,MAAM,CAAC;EAClF,MAAM;IAAEK,IAAI;IAAEC;EAAO,CAAC,GAAGd,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACG,MAAM,CAAC;EAC7DlB,SAAS,CAAC,MAAM;IACZU,QAAQ,CAACN,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;;EAEd;EACA,IAAIS,OAAO;EACX,IAAIP,SAAS,EAAE;IACXO,OAAO,gBAAGZ,OAAA,CAACF,OAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACzB;EACA,IAAI,CAACX,SAAS,IAAIC,OAAO,EAAE;IACvBM,OAAO,gBAAGZ,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEX;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACxD;EACA,IAAI,CAACX,SAAS,IAAI,CAACA,SAAS,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAGe,MAAM,MAAK,CAAC,EAAE;IACnDP,OAAO,gBAAGZ,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACjE;EACA,IAAI,CAACX,SAAS,IAAI,CAACA,SAAS,IAAI,CAAAD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAGe,MAAM,IAAG,CAAC,EAAE;IACjDP,OAAO,GAAGR,MAAM,CAACgB,GAAG,CAAEC,KAAK,iBAAMrB,OAAA,CAACN,aAAa;MAAgB2B,KAAK,EAAEA;IAAM,GAAvBA,KAAK,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAmB,CAAC;EACrF;EAEA,oBACIhB,OAAA;IAAAkB,QAAA,eACIlB,OAAA;MAASiB,SAAS,EAAC,OAAO;MAAAC,QAAA,eACtBlB,OAAA;QAASiB,SAAS,EAAC,OAAO;QAAAC,QAAA,eACtBlB,OAAA;UACIiB,SAAS,EAAC,sEAAsE;UAAAC,QAAA,EAG/EN;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAGN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEd,CAAC;AAACd,EAAA,CAvCID,SAAS;EAAA,QACMN,WAAW,EACkBC,WAAW,EAChCA,WAAW;AAAA;AAAA2B,EAAA,GAHlCtB,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}